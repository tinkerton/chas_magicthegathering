{"version":3,"sources":["components/ColorButton.js","components/ManaFilter.js","components/CardManaIcons.js","components/Card.js","components/Cards.js","screens/DeckLibrary.js","screens/Roster.js","screens/DeckRoster.js","App.js","serviceWorker.js","index.js"],"names":["ColorButton","props","styles","manaButton","display","flexDirection","alignItems","boxSizing","borderRadius","minWidth","textAlign","position","borderBottom","background","margin","height","manaImage","maxWidth","padding","top","left","manaLabel","fontFamily","fontWeight","textTransform","fontSize","color","button","value","name","imagePath","style","key","onClick","onChange","src","alt","ManaFilter","justifyContent","map","CardManaIcons","icons","manaIconContainer","manaCost","width","manaCostColored","undefined","split","item","replace","index","isNaN","find","x","Card","nrOfInput","useRef","list","grid","gridCard","flex","cursor","backgroundImage","minHeight","nrOfCards","border","marginLeft","cardNr","right","boxShadow","cardNrText","transform","manaName","Blue","Black","Red","Green","White","card","colors","id","imageUrl","e","ref","target","current","focus","select","className","Cards","cardColor","currentColor","flexWrap","cards","filter","includes","action","nrOf","DeckLibrary","useState","setCardColor","Roster","roster","DeckRoster","App","setRoster","setCards","error","setError","isLoaded","setIsLoaded","loadingContainer","loadingLogo","backgroundPosition","backgroundRepeat","loadingText","navBar","zIndex","logo","menuItem","marginRight","textDecoration","githubLink","deckContainer","deckPanelFull","marginTop","deckPanelLeft","deckPanelRight","modifyRoster","addToRoster","removeFromRoster","setNrOfInRoster","cardToAdd","newRoster","indexOf","concat","console","log","splice","useEffect","fetch","then","res","json","result","message","exact","activeClassName","to","href","rel","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"qQA6DeA,G,MA1DI,SAACC,GAElB,IAAMC,EAAU,CACdC,WAAY,CACVC,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,UAAW,aACXC,aAAc,kBACdC,SAAU,MACVC,UAAW,SACXC,SAAU,WACVC,aAAc,iBACdC,WAAY,UACZC,OAAO,iBACPC,OAAO,QAETC,UAAW,CACPF,OAAQ,mBACRG,SAAS,OACTJ,WAAY,OACZK,QAAS,MACTV,aAAc,QACdG,SAAU,WACVQ,IAAI,MACJC,KAAK,QAGTC,UAAW,CACTC,WAAY,QACZC,WAAW,OACXC,cAAe,YACfC,SAAU,OACVC,MAAM,OACNf,SAAU,WACVQ,IAAI,OACJC,KAAK,SApCmB,EAyCKnB,EAAM0B,OAA9BC,EAzCmB,EAyCnBA,MAAMC,EAzCa,EAyCbA,KAAKC,EAzCQ,EAyCRA,UAClB,OACI,yBACEC,MAAO7B,EAAOC,WACd6B,IAAKH,EACLF,OAAQC,EACRK,QAAS,kBAAMhC,EAAMiC,SAAS,CAACN,YACjC,yBACEG,MAAO7B,EAAOc,UACdmB,IAAKL,EACLM,IAAKP,IAEP,0BAAME,MAAO7B,EAAOmB,WAAYQ,MClBzBQ,EA9BI,SAACpC,GAoBnB,OACE,yBAAK8B,MATiB,CACnB3B,QAAQ,OACRkC,eAAgB,iBAZJ,CACd,CAAET,KAAM,MAAOD,MAAO,MAAOE,UAAU,uBACvC,CAAED,KAAM,QAASD,MAAO,QAAUE,UAAU,uBAC5C,CAAED,KAAM,OAAQD,MAAO,OAASE,UAAU,uBAC1C,CAAED,KAAM,QAASD,MAAO,QAASE,UAAU,uBAC3C,CAAED,KAAM,MAAOD,MAAO,MAAQE,UAAU,uBACxC,CAAED,KAAM,QAASD,MAAO,QAAUE,UAAU,wBAcjCS,KAAI,SAAAZ,GAAM,OACf,kBAAC,EAAD,CAAaK,IAAKL,EAAOE,KAAMF,OAAQA,EAAQO,SAAUjC,EAAMiC,gB,QCyC1DM,EAtEO,SAACvC,GAErB,IAAMwC,EAAQ,CAEZ,CAACb,MAAO,IAAME,UAAU,uBACxB,CAACF,MAAO,IAAME,UAAU,uBACxB,CAACF,MAAO,IAAKE,UAAU,uBACvB,CAACF,MAAO,IAAME,UAAU,uBACxB,CAACF,MAAO,IAAME,UAAU,wBAGpB5B,EAAU,CACdwC,kBAAmB,CACjBtC,QAAQ,gBAGVuC,SAAU,CACR9B,WAAW,OACXL,aAAa,OACbJ,QAAS,eACTwC,MAAO,OACP1B,QAAS,QACTR,UAAW,SACXa,WAAY,OAEdsB,gBAAiB,CACfzC,QAAS,eACTwC,MAAO,OACPlC,UAAW,SACXC,SAAU,YAEZK,UAAW,CACTL,SAAS,WACTQ,IAAI,MACJC,KAAK,MACLwB,MAAO,SAOb,QAAoBE,IAAhB7C,EAAMwC,MAAqB,OAAO,KAEtC,IAAIE,EAAU,GAMd,OAHAA,GADAA,EAAW1C,EAAMwC,MAAMM,MAAM,OACVR,KAAI,SAAAS,GAAI,OAAKA,EAAKC,QAAQ,IAAI,IAAIA,QAAQ,IAAI,OAI9D,yBAAKlB,MAAO7B,EAAOwC,mBAClBC,EAASJ,KAAI,SAACS,EAAME,GAAP,OAEbC,MAAMH,IAAgB,MAAPA,EACX,0BACEhB,IAAK,QAAQkB,EACbnB,MAAO7B,EAAO2C,iBACd,yBACAT,IAAKY,EACLjB,MAAO7B,EAAOc,UACdmB,IAAKM,EAAMW,MAAK,SAAAC,GAAC,OAAIA,EAAEzB,QAAUoB,KAAMlB,aAGzC,0BAAME,IAAKgB,EAAK,IAAIE,EAAOnB,MAAO7B,EAAOyC,UAAWK,QCkF7CM,EAjJF,SAACrD,GAEZ,IAAMsD,EAAYC,iBAAO,MAEnBtD,EAAU,CACduD,KAAM,CACJrD,QAAS,OACTC,cAAe,SACfM,SAAU,YAEZ+C,KAAM,CACJtD,QAAQ,OACRkC,eAAgB,aAChBjC,cAAe,MACfS,OAAO,OAGT6C,SAAU,CACRC,KAAK,IACL3C,SAAS,QACT2B,MAAM,QACNiB,OAAO,UACPlD,SAAU,WACVE,WAAW,UACXiD,gBAAgB,uCAChBC,UAAU,QACVvD,aAAa,OAGfwD,UAAW,CACTC,OAAQ,iBACRpD,WAAY,OACZK,QAAS,WACTgD,WAAY,MACZ3C,WAAY,MACZG,MAAO,OACPP,IAAK,MACLR,SAAU,WACVH,aAAc,MACdJ,QAAS,eACTwC,MAAO,OACPlC,UAAW,SACXK,OAAQ,QAEVoD,OAAS,CACPxD,SAAU,WACVE,WAAY,OACZL,aAAc,QACdJ,QAAS,QACTwC,MAAO,OACP7B,OAAQ,OACRI,IAAI,OACJiD,MAAM,MACN1C,MAAO,OACPD,SAAU,OACVF,WAAY,MACZ8C,UAAW,+BAGbC,WAAY,CACVnD,IAAK,MACLC,KAAM,MACNmD,UAAW,yBACX5D,SAAU,YAGZ6D,SAAW,CACTtD,QAAS,MACTK,WAAY,MACZT,OAAQ,UACRN,aAAc,MACdJ,QAAS,cACT2D,UAAW,OACX9C,SAAU,SAEZwD,KAAO,CACL5D,WAAW,aAGb6D,MAAQ,CACN7D,WAAW,oBAEb8D,IAAM,CACJ9D,WAAW,uBAEb+D,MAAQ,CACN/D,WAAW,WAEbgE,MAAQ,CACNhE,WAAW,qBAzFO,MAmGoCZ,EAAM6E,KAAzDjD,EAnGe,EAmGfA,KAAMkD,EAnGS,EAmGTA,OAAQC,EAnGC,EAmGDA,GAAIC,EAnGH,EAmGGA,SAAUjB,EAnGb,EAmGaA,UAAWrB,EAnGxB,EAmGwBA,SAC9C,OACE,yBAAKZ,MAAuB,SAAhB9B,EAAMG,QAAiBF,EAAOuD,KAAKvD,EAAOwD,MAEtC,SAAhBzD,EAAMG,QAEA,yBAAK2B,MAAO,CAAC6B,KAAK,MAChB,0BACE5B,IAAK,OAAOgD,EACZ/C,QAAS,SAACiD,GAAD,OAAKjF,EAAMiC,SAAS8C,EAAG,SAAS,QACvC,yBACE7C,IAAK,0BACLC,IAAI,SACJQ,MAAM,UAIZ,2BACEb,MAAO7B,EAAO8D,UACdpC,MAAOoC,EACPmB,IAAK5B,EACLrB,SAAU,SAACgD,GAAD,OAAKjF,EAAMiC,SAAS8C,EAAG,SAASE,EAAEE,OAAOxD,QACnDK,QA5BZ,WACEsB,EAAU8B,QAAQC,QAClB/B,EAAU8B,QAAQE,YA4BV,0BAAMxD,MAAK,2BAAM7B,EAAO6E,IAAY7E,EAAOsE,WAAY3C,GACvD,kBAAC,EAAD,CAAeY,MAAOE,KAIxB,yBACEX,IAAK,QAAUgD,EACfjD,MAAO7B,EAAOyD,SACd6B,UAAU,WACVvD,QAAS,SAACiD,GAAD,OAAKjF,EAAMiC,SAAS8C,KAC7B,yBAAK7C,IAAK8C,EAAU7C,IAAKP,EAAMe,MAAO,UACrCoB,GAAa,yBACXjC,MAAO7B,EAAOiE,QACd,0BAAMpC,MAAO7B,EAAOoE,YAAaN,OCvGjCyB,EAhCD,SAACxF,GACd,IAAMyF,EAAYzF,EAAM0F,aAExB,OACC,yBAAK5D,MAAO,CAAC3B,QAAS,OAAQwF,SAAU,OAAQvF,cAA8B,SAAhBJ,EAAMG,QAAiB,SAAS,QAE1FH,EAAM4F,MACHC,QACC,SAAAhB,GACE,MAAmB,QAAZY,EACLZ,EAAKC,OACLD,EAAKC,OAAOgB,SAASL,MAE1BnD,KAAI,SAAAS,GACH,QAAOA,EAAKiC,UACT,kBAAC,EAAD,CACDjD,IAAKgB,EAAKgC,GACVF,KAAM9B,EACN5C,QAASH,EAAMG,QACf8B,SAAU,SAAC8C,EAAGgB,EAAOC,GAAX,OAAoBhG,EAAMiC,SAAS8C,EAAGgB,EAAOC,WCHpDC,EAhBK,SAACjG,GAAW,IAAD,EACKkG,mBAAS,OADd,mBACtBT,EADsB,KACXU,EADW,KAG7B,OACI,yBAAKrE,MAAO9B,EAAM8B,OAChB,kBAAC,EAAD,CACAG,SAAU,SAACgD,GAAD,OAAKkB,EAAalB,EAAEtD,UAC9B,kBAAC,EAAD,CACEiE,MAAO5F,EAAM4F,MACbF,aAAcD,EACdxD,SAAU,SAAC8C,GAAD,OAAQ/E,EAAMiC,SAAS8C,EAAG,MAAM,WCOrCqB,EAjBA,SAACpG,GAAW,IAAD,EACUkG,mBAAS,OADnB,mBACjBT,EADiB,KACNU,EADM,KAGxB,OACE,yBAAKrE,MAAO9B,EAAM8B,OAChB,kBAAC,EAAD,CACEG,SAAU,SAACgD,GAAD,OAAKkB,EAAalB,EAAEtD,UAEhC,kBAAC,EAAD,CACEiE,MAAO5F,EAAMqG,OACbX,aAAcD,EACdxD,SAAU,SAAC8C,EAAGgB,EAAOC,GAAX,OAAoBhG,EAAMiC,SAAS8C,EAAGgB,EAAOC,QCOhDM,EAhBI,SAACtG,GAElB,OACE,yBAAK8B,MAAO9B,EAAM8B,OAChB,sCAEA,kBAAC,EAAD,CACE8D,MAAO5F,EAAMqG,OACbX,aAAc,MACdvF,QAAS,OACT8B,SAAU,SAAC8C,EAAIgB,EAAQC,GAAb,OAAsBhG,EAAMiC,SAAS8C,EAAGgB,EAAOC,QCuQlDO,EAnQL,WAER,IAFa,EAGeL,mBAAS,IAHxB,mBAGNG,EAHM,KAGEG,EAHF,OAIaN,mBAAS,IAJtB,mBAINN,EAJM,KAICa,EAJD,OAKaP,mBAAS,MALtB,mBAKNQ,EALM,KAKCC,EALD,OAMmBT,oBAAS,GAN5B,mBAMNU,EANM,KAMIC,EANJ,KASP5G,EAAU,CACZ6G,iBAAmB,CACnBlG,WAAW,OACXF,SAAU,WACViC,MAAM,OACN7B,OAAQ,cACRX,QAAQ,SAEV4G,YAAa,CACXlD,gBAAiB,sCACjBmD,mBAAoB,UACpBC,iBAAkB,YAClBtE,MAAM,OACN7B,OAAQ,cACRD,OAAQ,aAEVqG,YAAa,CACXzF,MAAO,OACPtB,QAAS,QACTU,OAAQ,YACRJ,UAAW,SACXS,IAAK,MACLR,SAAU,WACVa,cAAe,aAGjB4F,OAAQ,CACNhH,QAAS,OACTS,WAAY,OACZa,MAAO,OACPY,eAAgB,WAChBpB,QAAQ,sBACRP,SAAU,QACViC,MAAO,qBACPyE,OAAO,KAETC,KAAM,CACJ7F,SAAS,OACTF,WAAW,MACXZ,SAAU,WACVS,KAAK,QAGPmG,SAAW,CACT7F,MAAM,OACN8F,YAAY,OACZC,eAAe,OACflG,WAAY,OAGdmG,WAAa,CACXhG,MAAM,OACND,SAAU,OACVD,cAAc,YACdiG,eAAe,OACfrH,QAAQ,eACRmB,WAAW,MACXiG,YAAY,QAIdG,cAAe,CACbvH,QAAQ,QAEVwH,cAAgB,CACdhF,MAAM,OACN1B,QAAS,OACT2G,UAAU,OACVhH,WAAW,SAEbiH,cAAe,CAEblF,MAAO,MACP1B,QAAS,OACT2G,UAAU,OACVhH,WAAW,SAIbkH,eAAgB,CACdnF,MAAO,MACPnC,SAAS,QACTS,QAAS,OACTL,WAAW,UACXF,SAAU,QACVyD,MAAM,IACNjD,IAAK,OACLJ,OAAQ,qBACRsD,UAAW,kCA0Cf,SAAS2D,EAAahD,GAAiC,IAA7BgB,EAA4B,uDAArB,SAAUC,EAAW,uDAAN,KAC9C,OAAQD,GACN,IAAK,MAAQiC,EAAYjD,GAAK,MAC9B,IAAK,SAAYkD,EAAiBlD,GAAK,MACvC,IAAK,SAAYmD,EAAgBnD,EAAGiB,IASzC,SAASgC,EAAYjD,GACpB,IAAIoD,EAAYvC,EAAMzC,MAAK,SAAA0B,GAAI,OAAIA,EAAKE,KAAOA,KAC3CqD,EAAS,YAAO/B,GACdpD,EAAQmF,EAAUC,QAAQhC,EAAOlD,MAAK,SAAA0B,GAAI,OAAIA,EAAKE,KAAOA,OAEjD,IAAX9B,GACFmF,EAAUnF,GAAOc,YACjByC,EAAU4B,KAGVD,EAAUpE,UAAY,EACtByC,EAAU4B,EAAUE,OAAOH,KAQ7B,SAASF,EAAiBlD,GACxB,IAAIqD,EAAS,YAAO/B,GACdpD,EAAQmF,EAAUC,QAAQhC,EAAOlD,MAAK,SAAA0B,GAAI,OAAIA,EAAKE,KAAOA,OACjD,IAAX9B,IACEmF,EAAUnF,GAAOc,UAAU,GAC7BqE,EAAUnF,GAAOc,YACjBwE,QAAQC,IAAIJ,EAAUnF,GAAOc,aAG7BqE,EAAUnF,GAAOc,UAAU,GAC3BqE,EAAUK,OAAOxF,EAAO,IAG1BuD,EAAU4B,IAOhB,SAASF,EAAgBnD,EAAIiB,GAC3B,IAAIoC,EAAS,YAAO/B,GACdpD,EAAQmF,EAAUC,QAAQhC,EAAOlD,MAAK,SAAA0B,GAAI,OAAIA,EAAKE,KAAOA,MAC5DiB,GAAO,EAEToC,EAAUK,OAAOxF,EAAO,GACfC,MAAM8C,KACA,IAAX/C,IACFmF,EAAUnF,GAAOc,UAAUiC,GAI/BQ,EAAU4B,GAGV,OAnGEM,qBAAU,WAcNC,MAAM,sDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACClC,GAAY,GACZJ,EAASsC,EAAOnD,UAElB,SAACc,GACCG,GAAY,GACZF,EAASD,QAIZ,EApIS,IA4MZA,EAEA,yBAAK5E,MAAO7B,EAAO6G,kBACjB,yBAAKhF,MAAO7B,EAAO8G,aACjB,yBAAKjF,MAAO7B,EAAOiH,aAAcR,EAAMsC,WAGnCpC,EAUR,kBAAC,IAAD,KACE,yBAAK9E,MAAO7B,EAAOkH,QACnB,yBAAKrF,MAAO7B,EAAOoH,MAAnB,qCACE,kBAAC,IAAD,CAAS4B,OAAK,EAACC,gBAAgB,YAAYpH,MAAO7B,EAAOqH,SAAU6B,GAAG,4BAAtE,gBACA,kBAAC,IAAD,CAASD,gBAAgB,YAAYpH,MAAO7B,EAAOqH,SAAU6B,GAAG,kCAAhE,WACA,uBAAGrH,MAAO7B,EAAOwH,WAAY2B,KAAK,sDAAsDC,IAAI,sBAAsBlE,OAAO,UAAzH,kBAIF,yBAAKrD,MAAO7B,EAAOyH,eACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4B,KAAK,WACV,kBAAC,EAAD,CACExH,MAAO7B,EAAO0H,cACdtB,OAAQA,EACRpE,SAAU,SAAC8C,EAAGgB,EAAOC,GAAX,OAAkB+B,EAAahD,EAAG,SAAS,UAEzD,kBAAC,IAAD,CAAOuE,KAAK,KACR,kBAAC,EAAD,CACExH,MAAO7B,EAAO4H,cACdjC,MAAOA,EACPS,OAAQA,EACRpE,SAAU,SAAC8C,EAAGgB,EAAOC,GAAX,OAAkB+B,EAAahD,EAAG,MAAM,SACpD,kBAAC,EAAD,CACEjD,MAAO7B,EAAO6H,eACdzB,OAAQA,EACRpE,SAAU,SAAC8C,EAAGgB,EAAOC,GAAX,OAAkB+B,EAAahD,EAAGgB,EAAOC,UAlC7D,yBAAKlE,MAAO7B,EAAO6G,kBACjB,yBAAKhF,MAAO7B,EAAO8G,aACjB,yBAAKjF,MAAO7B,EAAOiH,YAAa3B,UAAU,oBAA1C,uBCjOUgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvB,MAAK,SAAAwB,GACJA,EAAaC,gBAEdC,OAAM,SAAA5D,GACL6B,QAAQ7B,MAAMA,EAAMsC,c","file":"static/js/main.14f8d119.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst ColorButton =(props) => {\n  \n  const styles = ({\n    manaButton: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n      borderRadius: '4px 4px 0px 0px',\n      minWidth: '16%',\n      textAlign: 'center',\n      position: 'relative',\n      borderBottom: '1px solid #CCC',\n      background: '#F7F7F7',\n      margin:'0px 4px 40px 0',\n      height:'44px',\n    },\n    manaImage: {\n        margin: '0px 0px 20px 0px',\n        maxWidth:'20px',\n        background: '#FFF',\n        padding: '4px',\n        borderRadius: '100px',\n        position: 'absolute',\n        top:'8px',\n        left:'10px',\n       \n    },\n    manaLabel: {\n      fontFamily: 'Arial',\n      fontWeight:'bold',\n      textTransform: 'uppercase',\n      fontSize: '12px',\n      color:'#333',\n      position: 'absolute',\n      top:'15px',\n      left:'45px',\n\n    }\n  })\n\n    const {value,name,imagePath} = props.button;\n    return (\n        <div \n          style={styles.manaButton} \n          key={name} \n          button={value} \n          onClick={() => props.onChange({value})}>\n        <img \n          style={styles.manaImage} \n          src={imagePath} \n          alt={name}\n        />\n        <span style={styles.manaLabel}>{name}</span>\n      </div>\n    );\n  \n }\nexport default ColorButton;","import React from 'react';\nimport ColorButton from '../components/ColorButton';\n\n/*\nThis component shows a row of buttons with the mana colors,\nclicking on a button sets a card color in root state, that is \nused to filter all cards of the selected color\n*/\nconst ManaFilter = (props) => {\n\n  const buttons = [  \n    { name: \"All\", value: \"All\", imagePath:\"assets/images/C.svg\" },\n    { name: \"Black\", value: \"Black\",  imagePath:\"assets/images/B.svg\" },\n    { name: \"Blue\", value: \"Blue\",  imagePath:\"assets/images/U.svg\"  },\n    { name: \"Green\", value: \"Green\", imagePath:\"assets/images/G.svg\"  },\n    { name: \"Red\", value: \"Red\",  imagePath:\"assets/images/R.svg\"  },\n    { name: \"White\", value: \"White\",  imagePath:\"assets/images/W.svg\"  }\n  ];\n\n  const styles = ({\n    manaFilterContainer: {\n      display:'flex',\n      justifyContent: 'space-evenly',\n      \n    }\n  })\n\n\n return (\n   <div style={styles.manaFilterContainer}>\n     { buttons.map(button => (\n          <ColorButton key={button.name} button={button} onChange={props.onChange}/>\n      ))\n     }\n    </div>\n  );\n };\n\nexport default ManaFilter;","import React from 'react';\n\nconst CardManaIcons = (props) => {\n\n  const icons = [  \n   \n    {value: \"B\",  imagePath:\"assets/images/B.svg\" },\n    {value: \"U\",  imagePath:\"assets/images/U.svg\"  },\n    {value: \"G\", imagePath:\"assets/images/G.svg\"  },\n    {value: \"R\",  imagePath:\"assets/images/R.svg\"  },\n    {value: \"W\",  imagePath:\"assets/images/W.svg\"  }\n  ];\n\n  const styles = ({\n    manaIconContainer: {\n      display:'inline-block',\n\n    },\n    manaCost: {\n      background:'#DDD',\n      borderRadius:'10px',\n      display: 'inline-block',\n      width: '20px',\n      padding: '1px 0',\n      textAlign: 'center',\n      fontWeight: '700',\n    },\n    manaCostColored: {\n      display: 'inline-block',\n      width: '20px',\n      textAlign: 'center',\n      position: 'relative',\n    },\n    manaImage: {\n      position:'relative',\n      top:'4px',\n      left:'2px',\n      width: '20px',\n     \n    }\n\n  })\n\n //return null if no icons or cost\nif (props.icons === undefined) return null;\n\nlet manaCost =[];\n//split icon costs into an array\nmanaCost = props.icons.split('}{'); \nmanaCost= manaCost.map(item => (item.replace('{','').replace('}','')));\n\n\nreturn (\n   <div style={styles.manaIconContainer}>\n   {manaCost.map((item, index) => (\n    \n    isNaN(item) && item!==\"X\"\n     ? (<span \n          key={'grey_'+index} \n          style={styles.manaCostColored}>\n          <img \n          alt={item}\n          style={styles.manaImage}\n          src={icons.find(x => x.value === item).imagePath}/>\n\n        </span>)\n     :  <span key={item+'_'+index} style={styles.manaCost}>{item}</span>\n    ))} \n   </div>\n  );\n };\n\nexport default CardManaIcons;","import React,{useRef} from 'react';\nimport CardManaIcons from '../components/CardManaIcons';\n\nconst Card = (props) => {\n\n  const nrOfInput = useRef(null)\n    \n  const styles = ({\n    list: {\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'relative',\n    },\n    grid: {\n      display:'flex',\n      justifyContent: 'flex-start',\n      flexDirection: 'row',\n      margin:'2px',\n      \n    },\n    gridCard: {\n      flex:'1',\n      maxWidth:'200px',\n      width:'200px',\n      cursor:'pointer',\n      position: 'relative',\n      background:'#F7F7F7',\n      backgroundImage:'url(\"../assets/images/template.jpg\")',\n      minHeight:'278px',\n      borderRadius:'4px',\n\n    },\n    nrOfCards :{\n      border: '1px solid #DDD',\n      background: '#FFF',\n      padding: '7px 10px',\n      marginLeft: '5px',\n      fontWeight: '700',\n      color: '#666',\n      top: '1px',\n      position: 'relative',\n      borderRadius: '4px',\n      display: 'inline-block',\n      width: '14px',\n      textAlign: 'center',\n      height: '18px',\n    },\n    cardNr : {\n      position: 'absolute',\n      background: '#F00',\n      borderRadius: '100px',\n      display: 'block',\n      width: '30px',\n      height: '30px',\n      top:'-5px',\n      right:'0px',\n      color: '#FFF',\n      fontSize: '14px',\n      fontWeight: '900',\n      boxShadow: '5px 5px 5px rgba(0,0,0,0.3)'\n     \n    },\n    cardNrText: {\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50% , -50%)',\n      position: 'absolute'\n    },\n\n    manaName : {\n      padding: '6px',\n      fontWeight: '700',\n      margin: '8px 5px',\n      borderRadius: '4px',\n      display: 'inline-flex',\n      minHeight: '20px',\n      maxWidth: '190px',\n    },\n    Blue : {\n      background:'#3498db59',\n     \n    },\n    Black : {\n      background:'rgba(0,0,0,0.15)',\n    },\n    Red : {\n      background:'rgba(255,50,0,0.35)',\n    },\n    Green : {\n      background:'#cfeccd',\n    },\n    White : {\n      background:'rgb(233 224 206)',\n    }\n  })\n\n  function handleFocus(){\n    nrOfInput.current.focus();\n    nrOfInput.current.select();\n  }\n\n\n  const {name, colors, id, imageUrl, nrOfCards, manaCost} = props.card;\n  return (\n    <div style={props.display==='List'?styles.list:styles.grid}>\n    {\n    props.display==='List'\n      ? (\n          <div style={{flex:'1'}}>\n            <span \n              key={'add_'+id} \n              onClick={(e)=>props.onChange(id,'remove',null)}>\n                <img \n                  src={'assets/images/trash.svg'} \n                  alt='Delete'\n                  width='15px'\n                  />\n            </span>\n            \n            <input \n              style={styles.nrOfCards} \n              value={nrOfCards}\n              ref={nrOfInput} \n              onChange={(e)=>props.onChange(id,'modify',e.target.value)}\n              onClick={handleFocus}\n            />\n            <span style={{...styles[colors], ...styles.manaName}}>{name}</span> \n            <CardManaIcons icons={manaCost}/>\n            \n          </div>)\n      : (\n          <div \n            key={'card_' + id} \n            style={styles.gridCard} \n            className='gridCard'\n            onClick={(e)=>props.onChange(id)}>\n            <img src={imageUrl} alt={name} width={'200px'}/>\n            {nrOfCards && <div\n               style={styles.cardNr}>\n               <span style={styles.cardNrText}>{nrOfCards}</span>\n            </div>\n            }\n          </div>\n      )\n    }\n    </div>\n  )\n }\nexport default Card;","import React from 'react';\nimport Card from '../components/Card';\n\n/*Renders all cards of one or more colors as Card-components*/\nconst Cards = (props) => {\n const cardColor = props.currentColor;\n  \n return (\n  <div style={{display: 'flex', flexWrap: 'wrap', flexDirection:props.display===\"List\"?'column':'row'}}>\n    {  \n      props.cards\n        .filter(\n          card => {\n            return cardColor==='All'\n            ? card.colors\n            : card.colors.includes(cardColor)\n          })\n        .map(item => {\n          return item.imageUrl\n          ? (<Card \n            key={item.id} \n            card={item} \n            display={props.display}\n            onChange={(id,action,nrOf) => props.onChange(id,action,nrOf)}/>)\n          :false\n\n        }\n          \n           \n          )\n         \n    }\n  </div> \n  );\n };\n\nexport default Cards;","import React,{useState} from 'react';\nimport ManaFilter from '../components/ManaFilter';\nimport Cards from '../components/Cards';\n\nconst DeckLibrary = (props) => {\n  const [cardColor, setCardColor] = useState('All');\n\n  return (\n      <div style={props.style}>\n        <ManaFilter \n        onChange={(e)=>setCardColor(e.value)}/>\n        <Cards \n          cards={props.cards} \n          currentColor={cardColor} \n          onChange={(id) => props.onChange(id,'add',null)}/>\n       </div>\n    \n  );             \n}\n\nexport default DeckLibrary;","import React,{useState} from 'react';\nimport ManaFilter from '../components/ManaFilter';\nimport Cards from '../components/Cards';\n\nconst Roster = (props) => {\n  const [cardColor, setCardColor] = useState('All');\n\n  return (\n    <div style={props.style}>\n      <ManaFilter \n        onChange={(e)=>setCardColor(e.value)}/>\n              \n      <Cards \n        cards={props.roster} \n        currentColor={cardColor} \n        onChange={(id,action,nrOf) => props.onChange(id,action,nrOf)}/>\n\n    </div>\n  );             \n}\n\nexport default Roster;","import React from 'react';\nimport Cards from '../components/Cards';\n\n/*This component shows a list of selected cards \n  with nr, name and mana cost\n*/\nconst DeckRoster = (props) => {\n\n  return (\n    <div style={props.style}>\n      <h1>Roster</h1>\n    \n      <Cards \n        cards={props.roster} \n        currentColor={'All'} \n        display={'List'}\n        onChange={(id, action, nrOf) => props.onChange(id,action,nrOf)}/>\n\n    </div>\n  );             \n}\n\nexport default DeckRoster;","import \n  React, {\n  useState, \n  useEffect,\n \n} from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n  \n} from \"react-router-dom\";\n\nimport './App.css';\nimport DeckLibrary from \"./screens/DeckLibrary\";\nimport Roster from \"./screens/Roster\";\nimport DeckRoster from \"./screens/DeckRoster\";\n\nconst App=()=> {\n  \n  const DEVMODE = false; //set to true to skip API call\n  const [roster, setRoster] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n \n\n  const styles = ({\n      loadingContainer : {\n      background:'#000',\n      position: 'relative',\n      width:'100%',\n      height: 'calc(100vh)',\n      display:'block',\n    },\n    loadingLogo: {\n      backgroundImage: 'url(../assets/images/magiclogo.png)',\n      backgroundPosition: '50% 50%',\n      backgroundRepeat: 'no-repeat',\n      width:'100%',\n      height: 'calc(100vh)',\n      margin: 'auto auto'\n    },\n    loadingText: {\n      color: '#FFF',\n      display: 'block',\n      margin: 'auto auto',\n      textAlign: 'center',\n      top: '70%',\n      position: 'relative',\n      textTransform: 'uppercase',\n\n    },\n    navBar: {\n      display: 'flex',\n      background: '#000',\n      color: '#FFF',\n      justifyContent: 'flex-end',\n      padding:'20px 40px 20px 40px',\n      position: 'fixed',\n      width: 'calc(100vw - 40px)',\n      zIndex:'1',\n    },\n    logo: {\n      fontSize:'20px',\n      fontWeight:'700',\n      position: 'absolute',\n      left:'40px',\n    },\n\n    menuItem : { \n      color:'#FFF',\n      marginRight:'40px',\n      textDecoration:'none',\n      fontWeight: '700',\n\n    },\n    githubLink : {\n      color:'#DDD',\n      fontSize: '8 px',\n      textTransform:'uppercase',\n      textDecoration:'none',\n      display:'inline-block',\n      fontWeight:'700',\n      marginRight:'40px',\n      \n    },\n\n    deckContainer: {\n      display:'flex',\n    },\n    deckPanelFull : {\n      width:'100%',\n      padding: '40px',\n      marginTop:'40px',\n      background:'##FFF',\n    },\n    deckPanelLeft: {\n\n      width: '63%',\n      padding: '40px',\n      marginTop:'40px',\n      background:'##FFF',\n     \n      \n    },\n    deckPanelRight: {\n      width: '25%',\n      minWidth:'350px',\n      padding: '40px',\n      background:'#f7F7F7',\n      position: 'fixed',\n      right:'0',\n      top: '58px',\n      height: 'calc(100vh - 58px)',\n      boxShadow: '-3px 0px 15px rgba(0,0,0,0.4)',\n    }\n\n  })\n\n\n  /*\n   For quicker development, use local data \n   instead of getting it from the API by setting DEVMODE = true\n  */\n    useEffect(() => {\n      if (DEVMODE) {\n        setCards([\n        {\n          id:\"1\", colors:\"White\", name:\"Archangel Avazyn\", manaCost:\"{3}{W}{W}\", imageUrl:\"http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=409741&type=card\"\n        },\n        {\n          id:\"2\", colors:\"Blue\", name:\"Second card\", manaCost:\"{3}{U}{U}{U}\", imageUrl:\"http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=106426&type=card\"\n        }\n        ]);\n        setIsLoaded(true);\n      }\n      else {\n        //Fetch MTG API data if not DEVMODE\n        fetch(\"https://api.magicthegathering.io/v1/cards?code=10e\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            setIsLoaded(true);\n            setCards(result.cards);\n          },\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        )\n      }\n      }, [DEVMODE]) //update on DEVMODE change\n  \n  /*In order to handle multiple callbacks from children,\n    this function relays the callback to specific functions\n  */\n  function modifyRoster(id, action='remove', nrOf=null) {\n    switch (action) {\n      case 'add': {addToRoster(id); break;}\n      case 'remove' : {removeFromRoster(id); break;}\n      case 'modify' : {setNrOfInRoster(id,nrOf); break;}\n      default : break;\n     \n    }\n  }\n  \n  /*Add more cards of tbe same if the card \n    is already in the roster, else add new card \n  */\n function addToRoster(id) {\n  var cardToAdd = cards.find(card => card.id === id);\n  var newRoster = [...roster];\n  const index = newRoster.indexOf(roster.find(card => card.id === id))\n  \n  if (index !== -1) {\n    newRoster[index].nrOfCards++;\n    setRoster(newRoster);\n  }\n  else {\n    cardToAdd.nrOfCards = 1;\n    setRoster(newRoster.concat(cardToAdd));\n  }\n  \n}\n\n  /*Remove one of card of tbe same type if the card \n    is already in the roster, else remove the card entirely\n  */\n  function removeFromRoster(id) {\n    var newRoster = [...roster];\n    const index = newRoster.indexOf(roster.find(card => card.id === id))\n    if (index !== -1) {\n      if (newRoster[index].nrOfCards>1) {\n        newRoster[index].nrOfCards--;\n        console.log(newRoster[index].nrOfCards)\n      }\n      else {\n        newRoster[index].nrOfCards=''; //needed to trigger rerender\n        newRoster.splice(index, 1);\n      }\n    \n      setRoster(newRoster);\n    }\n  }\n    \n/*Set a specific nr of cards to a  card\n  already in the roster, remove it if 0\n*/\nfunction setNrOfInRoster(id, nrOf) {\n  var newRoster = [...roster];\n  const index = newRoster.indexOf(roster.find(card => card.id === id))\n  if (nrOf <=0) {\n\n    newRoster.splice(index, 1);\n  }else if (!isNaN(nrOf)) {\n    if (index !== -1) {\n      newRoster[index].nrOfCards=nrOf;\n     \n    }\n  }\n  setRoster(newRoster);\n}\n  //RENDER\n  if (error) { //ERROR SCREEN\n    return (\n      <div style={styles.loadingContainer}>\n        <div style={styles.loadingLogo}>\n          <div style={styles.loadingText}>{error.message}</div>\n        </div>\n      </div>)\n  } else if (!isLoaded) { //LOADING SCREEN\n    return (\n      <div style={styles.loadingContainer}>\n        <div style={styles.loadingLogo}>\n          <div style={styles.loadingText} className=\"pulsingAnimation\">Loading API data</div>\n        </div>\n      </div>)\n  } else {\n    return ( \n      //Using a Router component because it is mandatory in the course\n      <Router>\n        <div style={styles.navBar}>\n        <div style={styles.logo}>MAGIC THE GATHERING: DECK BUILDER</div>\n          <NavLink exact activeClassName='is-active' style={styles.menuItem} to=\"/chas_magicthegathering/\">DECK BUILDER</NavLink>\n          <NavLink activeClassName='is-active' style={styles.menuItem} to=\"/chas_magicthegathering/roster\">MY DECK</NavLink> \n          <a style={styles.githubLink} href=\"https://github.com/tinkerton/chas_magicthegathering\" rel=\"noopener noreferrer\" target=\"_blank\">View on Gitub</a>\n          \n       </div>\n  \n        <div style={styles.deckContainer}>\n        <Switch>\n          <Route path=\"/roster\">\n            <Roster \n              style={styles.deckPanelFull}\n              roster={roster}\n              onChange={(id,action,nrOf)=>modifyRoster(id,'remove',null) } />\n          </Route>\n          <Route path=\"/\">\n              <DeckLibrary \n                style={styles.deckPanelLeft}\n                cards={cards}\n                roster={roster}\n                onChange={(id,action,nrOf)=>modifyRoster(id,'add',null) }/>\n              <DeckRoster \n                style={styles.deckPanelRight} \n                roster={roster}\n                onChange={(id,action,nrOf)=>modifyRoster(id,action,nrOf) } />\n            \n          </Route>\n        </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}